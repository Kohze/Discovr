library(Discovr)
library(Discovr)
method("test")
methods("test")
dir()
tempdir()
paste(tempdir(),"\\test"sep="")
paste(tempdir(),"test"sep="\\")
paste(tempdir(),"test",sep="\\")
z = paste(tempdir(),"test",sep="\\")
z
paste(tempdir())
library(Discovr)
test = function(x,y = NULL) {
if(is.null(y)){
return(x)
} else {
return(x+y)
}
}
test = function(x,y = 5) {
if(is.null(y)){
return(x)
} else {
return(x+y)
}
}
test = function(x,y = 5) {
if(is.null(y)){
return(x)
} else {
return(x+y)
}
}
test(3)
test = function(x,y = 5) {
if(y == 5{
return(x)
} else {
return(x+y)
}
}
test = function(x,y = 5) {
if(y == 5){
return(x)
} else {
return(x+y)
}
}
test(3)
test(3+4)
test(3+6)
test = function(x,y = 5) {
if(y == 5){
return(x+y)
} else {
return(x+y)
}
}
test(3)
test(4,5)
test(4,6)
library(Discovr)
library(Discovr)
library(Discovr)
a = mtcars[1:2]
var.test(a)
var.test(a[1],a[2])
var.test(a[[1]],a[[2]])
b = var.test(a[[1]],a[[2]])
b$p.value
library(Discovr)
install.packages("htmlwidgets")
library(htmlwidgets)
?htmlwidgets
vignette("htmlwidgets-intro")
devtools::create("mywidget")
setwd("mywidget")
htmlwidgets::scaffoldWidget("mywidget")
devtools::create("mywidget")
setwd("mywidget")
htmlwidgets::scaffoldWidget("mywidget")
devtools::install()
library(mywidget)
mywidget("hello, world")
system("pwd")
library(data.table)
shiny::runApp('ShinyDiscovr')
runApp('ShinyDiscovr')
alpha = data.frame(c(1,2,6,3,4,8))
sum alpha$c.1..2..6..3..4..8.
sum(alpha$c.1..2..6..3..4..8.)
rep(1:5)
rep(1:5,2)
rep(1:5:2)
1:6:2
rep(1:5,by = 2)
rep(1:6,by = 2)
seq(0,10,2)
sum(seq(0,10,2))
a = function(x){}
a = c(1,2,3,4,5,6)
a[6:1]
rev(a)
aov(mtcars)
var.test(mtcars)
prcompF <- function(mat, ...) {
mat <- as.matrix(mat)
n = ncol(mat)
p.mat = matrix(NA, n, n)
diag(p.mat) = 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
test = var.test(mat[, i], mat[, j], ...)
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
signif(test,3)
}
prcompF(mtcars)
prcompF <- function(mat, ...) {
mat <- as.matrix(mat)
n = ncol(mat)
p.mat = matrix(NA, n, n)
diag(p.mat) = 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
test = var.test(mat[, i], mat[, j], ...)
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
test
}
prcompF(mtcars)
var.test(output = var.test(mtcars[[1]],mtcars[[2]])
)
var.test(output = var.test(mtcars[[1]])
)
var.test(output = var.test(mtcars$hp,mtcars$mpg)
)
var.test(mtcars$hp,mtcars$mpg)
output = var.test(mtcars$hp,mtcars$mpg)
output$p.value
output$statistic
as.numeric(output$statistic)
output = as.numeric(var.test(mtcars$hp,mtcars$mpg))
output = var.test(mtcars$hp,mtcars$mpg)
mannWhitTest <- function(mat, ...) {
mat <- as.matrix(mat)
n = ncol(mat)
p.mat = matrix(NA, n, n)
diag(p.mat) = 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
test = var.test(mat[, i], mat[, j], ..., paired = FALSE)
test = as.numeric(test$statistic)
p.mat[i, j] <- p.mat[j, i] <- test$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
signif(p.mat,3)
}
mannWhitTest(mtcars)
mannWhitTest <- function(mat, ...) {
mat <- as.matrix(mat)
n = ncol(mat)
p.mat = matrix(NA, n, n)
diag(p.mat) = 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
test = var.test(mat[, i], mat[, j])
test = as.numeric(test$statistic)
p.mat[i, j] <- p.mat[j, i] <- test$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
signif(p.mat,3)
}
mannWhitTest(mtcars)
mannWhitTest <- function(mat, ...) {
mat <- as.matrix(mat)
n = ncol(mat)
p.mat = matrix(NA, n, n)
diag(p.mat) = 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
test = var.test(mat[, i], mat[, j])
test = as.numeric(test$statistic)
p.mat[i, j] <- p.mat[j, i] <- test
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
signif(p.mat,3)
}
mannWhitTest(mtcars)
library(Discovr)
chisq.test(mtcars)
chisq.test(mtcars$mpg,mtcars$cyl)
output = chisq.test(mtcars$cyl,mtcars$mpg)$p.value
output
wilcoxonTest <- function(mat, ...) {
mat <- as.matrix(mat)
n = ncol(mat)
p.mat = matrix(NA, n, n)
diag(p.mat) = 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
test = chisq.test(mat[, i], mat[, j])
p.mat[i, j] <- p.mat[j, i] <- test$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
signif(p.mat,3)
}
wilcoxonTest(mtcars)
wilcoxonTest(mtcars)
chiSQTest <- function(mat, ...) {
mat <- as.matrix(mat)
n = ncol(mat)
p.mat = matrix(NA, n, n)
diag(p.mat) = 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
test = shapiro.test(mat[, i], mat[, j])
p.mat[i, j] <- p.mat[j, i] <- test$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
signif(p.mat,3)
}
chiSQTest(mtcars)
shapiro.test(mtcars)
shapiro.test(mtcars$mpg,mtcars$cyl)
shapiro.test(mtcars$mpg)
lapply(mtcars, shapiro.test)
sapply(mtcars, shapiro.test)
a =sapply(mtcars, shapiro.test)
a = map(mtcars, shapiro.test)
a = sapply(mtcars, shapiro.test)
?shapiro.test
library(Discovr)
