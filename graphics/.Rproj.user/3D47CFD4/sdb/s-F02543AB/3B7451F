{
    "collab_server" : "",
    "contents" : "HTMLWidgets.widget({\n\n  name: 'd4_three',\n  type: 'output',\n\n  factory: function(el, width, height) {\n\n    // TODO: define shared variables for this instance\n\n    return {\n\n      renderValue: function(x) {\n\n        // TODO: code to render the widget, e.g.\n  //      el.innerText = x.message;\n       // el.innerText= \" test\";\n\n\n  var sampleSVG = d3.select(\"#\" + el.id).append(\"svg\")\n\n  sampleSVG.append(\"rect\")\n                      .style(\"fill\", \"orange\")\n                      .style(\"opacity\", 0.2)\n                      .attr(\"x\", 0)\n                      .attr(\"y\", 0)\n                      .attr(\"width\", 400)\n                      .attr(\"height\", 80);\n\n  sampleSVG.append(\"rect\")\n                      .style(\"fill\", \"yellow\")\n                      .style(\"opacity\", 0.1)\n                      .attr(\"x\", 0)\n                      .attr(\"y\", 80)\n                      .attr(\"width\", 215)\n                      .attr(\"height\", 240);\n\n  sampleSVG.append(\"rect\")\n                      .style(\"fill\", \"green\")\n                      .style(\"opacity\", 0.1)\n                      .attr(\"x\", 215)\n                      .attr(\"y\", 80)\n                      .attr(\"width\", 185)\n                      .attr(\"height\", 240);\n\n    var diagonal = d3.svg.diagonal()\n                         .source({x:20, y:200})\n                         .target({x:100, y:250});\n\n    var diagonal2 = d3.svg.diagonal()\n                         .source({x:20, y:200})\n                         .target({x:100, y:150});\n\n    var diagonal3 = d3.svg.diagonal()\n                         .source({x:100, y:150})\n                         .target({x:200, y:100});\n\n    var diagonal4 = d3.svg.diagonal()\n                         .source({x:100, y:150})\n                         .target({x:200, y:180});\n\n    var diagonal5 = d3.svg.diagonal()\n                         .source({x:100, y:250})\n                         .target({x:200, y:300});\n\n    var diagonal6 = d3.svg.diagonal()\n                         .source({x:100, y:250})\n                         .target({x:200, y:220});\n\n    sampleSVG.append(\"path\")\n                        .attr(\"d\", diagonal)\n                        .attr(\"stroke\", x.col1)\n                        .attr(\"stroke-width\", 1)\n                        .attr(\"fill\", \"none\");\n\n    sampleSVG.append(\"path\")\n                        .attr(\"d\", diagonal2)\n                        .attr(\"stroke\", x.col2)\n                        .attr(\"stroke-width\", 1)\n                        .attr(\"fill\", \"none\");\n\n    sampleSVG.append(\"path\")\n                        .attr(\"d\", diagonal3)\n                        .attr(\"stroke\", x.col3)\n                        .attr(\"stroke-width\", 1)\n                        .attr(\"fill\", \"none\");\n\n    sampleSVG.append(\"path\")\n                        .attr(\"d\", diagonal4)\n                        .attr(\"stroke\", x.col4)\n                        .attr(\"stroke-width\", 1)\n                        .attr(\"fill\", \"none\");\n\n    sampleSVG.append(\"path\")\n                        .attr(\"d\", diagonal5)\n                        .attr(\"stroke\", x.col5)\n                        .attr(\"stroke-width\", 1)\n                        .attr(\"fill\", \"none\");\n\n    sampleSVG.append(\"path\")\n                        .attr(\"d\", diagonal6)\n                        .attr(\"stroke\", x.col6)\n                        .attr(\"stroke-width\", 1)\n                        .attr(\"fill\", \"none\");\n\n   sampleSVG.append(\"circle\")\n                        .style(\"stroke\", \"gray\")\n                        .style(\"fill\", \"black\")\n                        .attr(\"r\", 10)\n                        .attr(\"cx\", 20)\n                        .attr(\"cy\", 200)\n                        .on(\"mouseover\", function() {\n                            d3.select(\"#tx2\").text(x.text1).style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"grey\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3.select(\"#tx2\").style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"black\");\n                        });\n\n   sampleSVG.append(\"circle\")\n                        .style(\"stroke\", \"gray\")\n                        .style(\"fill\", \"black\")\n                        .attr(\"r\", 8)\n                        .attr(\"cx\", 100)\n                        .attr(\"cy\", 150)\n                        .on(\"mouseover\", function() {\n                            d3.select(\"#tx2\").text(x.text2).style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"grey\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3.select(\"#tx2\").style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"black\");\n                        });\n\n   sampleSVG.append(\"circle\")\n                        .style(\"stroke\", \"gray\")\n                        .style(\"fill\", \"black\")\n                        .attr(\"r\", 8)\n                        .attr(\"cx\", 100)\n                        .attr(\"cy\", 250)\n                        .on(\"mouseover\", function() {\n                            d3.select(\"#tx2\").text(x.text3).style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"grey\");\n\n                        })\n                        .on(\"mouseout\", function() {\n                            d3.select(\"#tx2\").style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"black\");\n                        });\n\n   sampleSVG.append(\"circle\")\n                        .style(\"stroke\", \"gray\")\n                        .style(\"fill\", \"black\")\n                        .attr(\"r\", 8)\n                        .attr(\"cx\", 200)\n                        .attr(\"cy\", 100)\n                        .on(\"mouseover\", function() {\n                            d3.select(\"#tx2\").text(x.text4).style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"grey\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3.select(\"#tx2\").style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"black\");\n                        });\n\n   sampleSVG.append(\"circle\")\n                        .style(\"stroke\", \"gray\")\n                        .style(\"fill\", \"black\")\n                        .attr(\"r\", 8)\n                        .attr(\"cx\", 200)\n                        .attr(\"cy\", 180)\n                        .on(\"mouseover\", function() {\n                            d3.select(\"#tx2\").text(x.text5).style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"grey\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3.select(\"#tx2\").style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"black\");\n                        });\n\n   sampleSVG.append(\"circle\")\n                        .style(\"stroke\", \"gray\")\n                        .style(\"fill\", \"black\")\n                        .attr(\"r\", 8)\n                        .attr(\"cx\", 200)\n                        .attr(\"cy\", 220)\n                        .on(\"mouseover\", function() {\n                            d3.select(\"#tx2\").text(x.text6).style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"grey\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3.select(\"#tx2\").style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"black\");\n                        });\n\n   sampleSVG.append(\"circle\")\n                        .style(\"stroke\", \"gray\")\n                        .style(\"fill\", \"black\")\n                        .attr(\"r\", 8)\n                        .attr(\"cx\", 200)\n                        .attr(\"cy\", 300)\n                        .on(\"mouseover\", function() {\n                            d3.select(\"#tx2\").text(x.text7).style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"grey\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3.select(\"#tx2\").style('opacity', 1);\n                            d3.select(this).style(\"fill\",\"black\");\n                        });\n\n\n\n  sampleSVG.append(\"text\")\n                     .attr(\"id\",\"tx2\")\n                     .attr(\"x\", 275)\n                     .attr(\"y\", 100)\n                     .attr(\"font-family\", \"sans-serif\")\n                     .attr(\"font-size\", \"18px\")\n                     .attr(\"fill\", \"black\")\n                     .style('opacity', 1);\n\n  sampleSVG.append(\"text\")\n                     .attr(\"id\",\"description\")\n                     .attr(\"x\", 250)\n                     .attr(\"y\", 200)\n                     .text(\"lore ipsum dolore\")\n                     .attr(\"font-family\", \"sans-serif\")\n                     .attr(\"font-size\", \"11px\")\n                     .attr(\"fill\", \"black\")\n                     .style('opacity', 1);\n\n  sampleSVG.append(\"text\")\n                     .attr(\"id\",\"header1\")\n                     .attr(\"x\", 10)\n                     .attr(\"y\", 20)\n                     .text(\"Dataset:\")\n                     .attr(\"font-family\", \"sans-serif\")\n                     .attr(\"font-size\", \"11px\")\n                     .attr(\"fill\", \"black\")\n                     .style('opacity', 1);\n\n  sampleSVG.append(\"text\")\n                     .attr(\"id\",\"datasetName\")\n                     .attr(\"x\", 60)\n                     .attr(\"y\", 20)\n                     .text(\"tetasdasd\")\n                     .attr(\"font-family\", \"sans-serif\")\n                     .attr(\"font-size\", \"11px\")\n                     .attr(\"fill\", \"black\")\n                     .style('opacity', 1);\n\n  sampleSVG.append(\"text\")\n                     .attr(\"id\",\"colNames\")\n                     .attr(\"x\", 10)\n                     .attr(\"y\", 50)\n                     .text(x.cNames)\n                     .attr(\"font-family\", \"sans-serif\")\n                     .attr(\"font-size\", \"11px\")\n                     .attr(\"fill\", \"black\")\n                     .style('opacity', 1);\n\n\nvar d = {\n \"name\": \"flare\",\n \"children\": [\n  {\n   \"name\": \"analytics\",\n   \"children\": [\n    {\n     \"name\": \"cluster\",\n     \"children\": [\n      {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\n      {\"name\": \"CommunityStructure\", \"size\": 3812},\n      {\"name\": \"HierarchicalCluster\", \"size\": 6714},\n      {\"name\": \"MergeEdge\", \"size\": 743}\n     ]\n    },\n    {\n     \"name\": \"graph\",\n     \"children\": [\n      {\"name\": \"BetweennessCentrality\", \"size\": 3534},\n      {\"name\": \"LinkDistance\", \"size\": 5731},\n      {\"name\": \"MaxFlowMinCut\", \"size\": 7840},\n      {\"name\": \"ShortestPaths\", \"size\": 5914},\n      {\"name\": \"SpanningTree\", \"size\": 3416}\n     ]\n    },\n    {\n     \"name\": \"optimization\",\n     \"children\": [\n      {\"name\": \"AspectRatioBanker\", \"size\": 7074}\n     ]\n    }\n   ]\n  },\n  {\n   \"name\": \"animate\",\n   \"children\": [\n    {\"name\": \"Easing\", \"size\": 17010},\n    {\"name\": \"FunctionSequence\", \"size\": 5842},\n    {\n     \"name\": \"interpolate\",\n     \"children\": [\n      {\"name\": \"ArrayInterpolator\", \"size\": 1983},\n      {\"name\": \"ColorInterpolator\", \"size\": 2047},\n      {\"name\": \"DateInterpolator\", \"size\": 1375},\n      {\"name\": \"Interpolator\", \"size\": 8746},\n      {\"name\": \"MatrixInterpolator\", \"size\": 2202},\n      {\"name\": \"NumberInterpolator\", \"size\": 1382},\n      {\"name\": \"ObjectInterpolator\", \"size\": 1629},\n      {\"name\": \"PointInterpolator\", \"size\": 1675},\n      {\"name\": \"RectangleInterpolator\", \"size\": 2042}\n     ]\n    },\n    {\"name\": \"ISchedulable\", \"size\": 1041},\n    {\"name\": \"Parallel\", \"size\": 5176},\n    {\"name\": \"Pause\", \"size\": 449},\n    {\"name\": \"Scheduler\", \"size\": 5593},\n    {\"name\": \"Sequence\", \"size\": 5534},\n    {\"name\": \"Transition\", \"size\": 9201},\n    {\"name\": \"Transitioner\", \"size\": 19975},\n    {\"name\": \"TransitionEvent\", \"size\": 1116},\n    {\"name\": \"Tween\", \"size\": 6006}\n   ]\n  },\n  {\n   \"name\": \"data\",\n   \"children\": [\n    {\n     \"name\": \"converters\",\n     \"children\": [\n      {\"name\": \"Converters\", \"size\": 721},\n      {\"name\": \"DelimitedTextConverter\", \"size\": 4294},\n      {\"name\": \"GraphMLConverter\", \"size\": 9800},\n      {\"name\": \"IDataConverter\", \"size\": 1314},\n      {\"name\": \"JSONConverter\", \"size\": 2220}\n     ]\n    },\n    {\"name\": \"DataField\", \"size\": 1759},\n    {\"name\": \"DataSchema\", \"size\": 2165},\n    {\"name\": \"DataSet\", \"size\": 586},\n    {\"name\": \"DataSource\", \"size\": 3331},\n    {\"name\": \"DataTable\", \"size\": 772},\n    {\"name\": \"DataUtil\", \"size\": 3322}\n   ]\n  },\n  {\n   \"name\": \"display\",\n   \"children\": [\n    {\"name\": \"DirtySprite\", \"size\": 8833},\n    {\"name\": \"LineSprite\", \"size\": 1732},\n    {\"name\": \"RectSprite\", \"size\": 3623},\n    {\"name\": \"TextSprite\", \"size\": 10066}\n   ]\n  },\n  {\n   \"name\": \"flex\",\n   \"children\": [\n    {\"name\": \"FlareVis\", \"size\": 4116}\n   ]\n  },\n  {\n   \"name\": \"physics\",\n   \"children\": [\n    {\"name\": \"DragForce\", \"size\": 1082},\n    {\"name\": \"GravityForce\", \"size\": 1336},\n    {\"name\": \"IForce\", \"size\": 319},\n    {\"name\": \"NBodyForce\", \"size\": 10498},\n    {\"name\": \"Particle\", \"size\": 2822},\n    {\"name\": \"Simulation\", \"size\": 9983},\n    {\"name\": \"Spring\", \"size\": 2213},\n    {\"name\": \"SpringForce\", \"size\": 1681}\n   ]\n  },\n  {\n   \"name\": \"query\",\n   \"children\": [\n    {\"name\": \"AggregateExpression\", \"size\": 1616},\n    {\"name\": \"And\", \"size\": 1027},\n    {\"name\": \"Arithmetic\", \"size\": 3891},\n    {\"name\": \"Average\", \"size\": 891},\n    {\"name\": \"BinaryExpression\", \"size\": 2893},\n    {\"name\": \"Comparison\", \"size\": 5103},\n    {\"name\": \"CompositeExpression\", \"size\": 3677},\n    {\"name\": \"Count\", \"size\": 781},\n    {\"name\": \"DateUtil\", \"size\": 4141},\n    {\"name\": \"Distinct\", \"size\": 933},\n    {\"name\": \"Expression\", \"size\": 5130},\n    {\"name\": \"ExpressionIterator\", \"size\": 3617},\n    {\"name\": \"Fn\", \"size\": 3240},\n    {\"name\": \"If\", \"size\": 2732},\n    {\"name\": \"IsA\", \"size\": 2039},\n    {\"name\": \"Literal\", \"size\": 1214},\n    {\"name\": \"Match\", \"size\": 3748},\n    {\"name\": \"Maximum\", \"size\": 843},\n    {\n     \"name\": \"methods\",\n     \"children\": [\n      {\"name\": \"add\", \"size\": 593},\n      {\"name\": \"and\", \"size\": 330},\n      {\"name\": \"average\", \"size\": 287},\n      {\"name\": \"count\", \"size\": 277},\n      {\"name\": \"distinct\", \"size\": 292},\n      {\"name\": \"div\", \"size\": 595},\n      {\"name\": \"eq\", \"size\": 594},\n      {\"name\": \"fn\", \"size\": 460},\n      {\"name\": \"gt\", \"size\": 603},\n      {\"name\": \"gte\", \"size\": 625},\n      {\"name\": \"iff\", \"size\": 748},\n      {\"name\": \"isa\", \"size\": 461},\n      {\"name\": \"lt\", \"size\": 597},\n      {\"name\": \"lte\", \"size\": 619},\n      {\"name\": \"max\", \"size\": 283},\n      {\"name\": \"min\", \"size\": 283},\n      {\"name\": \"mod\", \"size\": 591},\n      {\"name\": \"mul\", \"size\": 603},\n      {\"name\": \"neq\", \"size\": 599},\n      {\"name\": \"not\", \"size\": 386},\n      {\"name\": \"or\", \"size\": 323},\n      {\"name\": \"orderby\", \"size\": 307},\n      {\"name\": \"range\", \"size\": 772},\n      {\"name\": \"select\", \"size\": 296},\n      {\"name\": \"stddev\", \"size\": 363},\n      {\"name\": \"sub\", \"size\": 600},\n      {\"name\": \"sum\", \"size\": 280},\n      {\"name\": \"update\", \"size\": 307},\n      {\"name\": \"variance\", \"size\": 335},\n      {\"name\": \"where\", \"size\": 299},\n      {\"name\": \"xor\", \"size\": 354},\n      {\"name\": \"_\", \"size\": 264}\n     ]\n    },\n    {\"name\": \"Minimum\", \"size\": 843},\n    {\"name\": \"Not\", \"size\": 1554},\n    {\"name\": \"Or\", \"size\": 970},\n    {\"name\": \"Query\", \"size\": 13896},\n    {\"name\": \"Range\", \"size\": 1594},\n    {\"name\": \"StringUtil\", \"size\": 4130},\n    {\"name\": \"Sum\", \"size\": 791},\n    {\"name\": \"Variable\", \"size\": 1124},\n    {\"name\": \"Variance\", \"size\": 1876},\n    {\"name\": \"Xor\", \"size\": 1101}\n   ]\n  },\n  {\n   \"name\": \"scale\",\n   \"children\": [\n    {\"name\": \"IScaleMap\", \"size\": 2105},\n    {\"name\": \"LinearScale\", \"size\": 1316},\n    {\"name\": \"LogScale\", \"size\": 3151},\n    {\"name\": \"OrdinalScale\", \"size\": 3770},\n    {\"name\": \"QuantileScale\", \"size\": 2435},\n    {\"name\": \"QuantitativeScale\", \"size\": 4839},\n    {\"name\": \"RootScale\", \"size\": 1756},\n    {\"name\": \"Scale\", \"size\": 4268},\n    {\"name\": \"ScaleType\", \"size\": 1821},\n    {\"name\": \"TimeScale\", \"size\": 5833}\n   ]\n  },\n  {\n   \"name\": \"vis\",\n   \"children\": [\n    {\n     \"name\": \"axis\",\n     \"children\": [\n      {\"name\": \"Axes\", \"size\": 1302},\n      {\"name\": \"Axis\", \"size\": 24593},\n      {\"name\": \"AxisGridLine\", \"size\": 652},\n      {\"name\": \"AxisLabel\", \"size\": 636},\n      {\"name\": \"CartesianAxes\", \"size\": 6703}\n     ]\n    },\n   ]\n  }\n ]\n}\n\n // https://github.com/wbkd/d3-extended\n    d3.selection.prototype.moveToFront = function() {\n      return this.each(function(){\n        this.parentNode.appendChild(this);\n      });\n    };\n    d3.selection.prototype.moveToBack = function() {\n        return this.each(function() {\n            var firstChild = this.parentNode.firstChild;\n            if (firstChild) {\n                this.parentNode.insertBefore(this, firstChild);\n            }\n        });\n    };\n\nvar diameter = 400,\n    format = d3.format(\",d\"),\n    color = d3.scale.category20c();\n\nvar bubble = d3.layout.pack()\n    .sort(null)\n    .size([diameter, diameter])\n    .padding(1.5);\n\nvar svg = sampleSVG\n     .attr(\"id\",\"bubblePlot\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nd3.json(d, function(error, root) {\n  var node = svg.selectAll(\".node\")\n      .attr(\"id\",\"bubblePlot\")\n      .data(bubble.nodes(classes(d))\n      .filter(function(d) { return !d.children; }))\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .attr(\"id\",\"bubblePlot\")\n      .text(function(d) { return d.className + \": \" + format(d.value); });\n\n  node.append(\"circle\")\n      .attr(\"id\",\"bubblePlot\")\n      .attr(\"r\", function(d) { return d.r; })\n      .style(\"fill\", function(d) { return color(d.packageName); })\n      //.on(\"mouseover\", function() {\n      //                      d3.selectAll(\"#bubblePlot\").moveToBack();\n      //})\n      .on(\"mouseover\", function(d) {\n    svg.selectAll(\"#bubblePlot\").sort(function (a, b) { // select the parent and sort the path's\n      if (a.id != d.id) return -1;               // a is not the hovered element, send \"a\" to the back\n      else return 1;                             // a is the hovered element, bring \"a\" to the front\n  });\n})\n\n  node.append(\"text\")\n      .attr(\"id\",\"bubblePlot\")\n      .attr(\"font-size\", \"8px\")\n      .attr(\"dy\", \".2em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.className.substring(0, d.r / 3); });\n\n});\n\n// Returns a flattened hierarchy containing all leaf nodes under the root.\nfunction classes(root) {\n  var classes = [];\n\n  function recurse(name, node) {\n    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });\n    else classes.push({packageName: name, className: node.name, value: node.size});\n  }\n\n  recurse(null, root);\n  return {children: classes};\n}\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n      },\n\n      resize: function(width, height) {\n\n        // TODO: code to re-render the widget with a new size\n\n      }\n\n    };\n  }\n});\n",
    "created" : 1470130585369.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3110220499",
    "id" : "3B7451F",
    "lastKnownWriteTime" : 1471038097,
    "last_content_update" : 1471038097581,
    "path" : "~/d3three/inst/htmlwidgets/d4_three.js",
    "project_path" : "inst/htmlwidgets/d4_three.js",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "js"
}