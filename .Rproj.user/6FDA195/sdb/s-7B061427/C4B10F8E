{
    "collab_server" : "",
    "contents" : "#' @title discovr() \n#' @param x A data.frame or data.table\n#' @param method The method indicates \"paired\" or \"unpaired\" testing\n#' @param preset As preset mutliple techniques are allowed, such as \"FACS\" or \"FRAP\".\n#' @param style A style input such as \"heatmap\" / \"cleveland\" / \"ternary\" \n#' @return The calculation output\n#' @include graphics.R\n#' @include statisticFun.R\n#' @import future\n#' @examples \n#' library(Discovr)\n#' disc(mtcars[1:2])\n#' @export\ndisc <- function(x, method = \"unpaired\", preset = NULL, style = \"heatmap\"){\n  method = as.character(method)\n  input = as.data.frame(x)\n  cols = length(input)\n  if(!is.null(preset)) presetApp = as.character(preset)\n  \n  library(d3heatmap)\n#  library(future)\n  \n  if(cols == 2) {\n    if(is.null(preset)){\n      if(method == \"paired\") data = pairedTest(x) else data = unPairedTest(x)\n    } else if(presetApp == \"facs\" | presetApp == \"FACS\") {\n      cat(\"performing FACS preset analysis\")\n    } else if(presetApp == \"frap\" | presetApp == \"FRAP\") {\n      cat(\"performing FRAP preset analysis\")\n    } else {\n      cat(\"disc() input not recognized - check type errors\")\n    }\n  } else if(cols > 2) {\n    cat(\"multi column analysis\")\n  } else {\n    cat(\"problem with data input\")\n  }\n  \n  if(exists(\"data\")){\n    plotFun(data,style)\n  } else { return(\"sry something went wront\")}\n\n  \n}\n\n#' Output for only paired tests\n#' @param input taking the output of all statistical methods\n#' @return extacts p value of all paired tests and adds them to data.frame\npairedTest <- function(input){\n  \n  shapiroT %<-% shapiroTest(input)\n  corT %<-% corTest(input)\n  chiT %<-% chiSQTest(input)\n  manwiT %<-% mannWhitTest(input) \n  wilcoT %<-% wilcoxonTest(input) \n  anovaT %<-% anovaTest(input)\n  \n  #create data.frame ordered by test function\n  \n  return(output)\n}\n\n#' Output for only un-paired tests\n#' @param input taking the output of all statistical methods\n#' @return extacts p value of all un-paired tests and adds them to data.frame\nunPairedTest <- function(input){\n  \n  welchT %<-% welchTest(input)\n  #shapiroT = shapiroTest(input)\n  corT %<-% corTest(input)\n  chiT %<-% chiSQTest(input)\n  #anovaT = anovaTest(input)\n  \n  dataComp = data.frame()\n  dataComp[1,1] = welchT$p.value\n  dataComp[1,2] = corT\n  dataComp[1,3] = chiT\n  \n  #just some added columns as space filler for now\n  dataComp[2,2] = welchT$p.value\n  dataComp[2,3] = corT\n  dataComp[2,1] = chiT\n  \n  colnames(dataComp) = c(\"Welch\",\"Correlation\",\"Chi Square\")\n  output = dataComp\n  \n  #create data.frame ordered by test function\n  \n  return(output)\n}\n",
    "created" : 1469396118996.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3494210796",
    "id" : "C4B10F8E",
    "lastKnownWriteTime" : 1469396157,
    "last_content_update" : 1469396157553,
    "path" : "~/Discovr/R/discovr.R",
    "project_path" : "R/discovr.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}